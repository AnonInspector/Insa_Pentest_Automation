import subprocess
import os
from colorama import init
from colorama import Fore
from termcolor import colored
from art import *
init()
import nmap


scanner = nmap.PortScanner()
print(colored("_"*53, "green"))
print(colored("Welcome to Information Network Security Agency(INSA)", "green"))
print(colored("A simple vulnerability automation tool!", "green"))
art = text2art("INSA", font='isometric3')
print(Fore.GREEN + art)
print("Initiating Tool")
print(colored("_"*53, "green"))
print(colored("This tool is for authorized users only, By", "green"))
print(colored("using this tool, users can automate vulnerability scanning. ", "green"))
print(colored("This tool is fully inspired & developed by Abenezer Mandefro,", "green"))
print(colored("on the behalf of THE CYBER TALENT CENTER at INSA", "green"))
print(colored("Copy right belongs to Abenezer Mandefro.", "green"))
print(colored("Copyright, All rights reserved 2014 E.C", "green"))
print(colored("_"*53, "green"))

try:
    input(colored("Press 'Enter' to proceed...", "green"))
except SyntaxError:
    pass
print(colored("_"*53, "green"))


def mainMenu(): 
    response = int(input(colored("""Please select a scan type to initialize:\n
1 Host Discovery
2 Full Network Mapping
3 Port Discovery
4 Port Discovery In a Range
5 'Vuln' vulnerability scan
6 'Vulners' vulnerability scan
7 'Uniscan' vulnerability scan
8 Clear The Terminal
9 Exit The Program
10 What Web Scan
11 Directory Search
    \n:""", 'green')))
    text = colored("\nYou have selected scan type: ", 'green')
    print(text, response)
    print(colored("_"*53, "green"))
    if response == 1:
        Host_DisCov()
        mainMenu()
    elif response == 2:
        os_discovery()
        mainMenu()
    elif response == 3:
        port_discovery()
        mainMenu()
    elif response == 4:
        port_discoveryInaRange()
        mainMenu()
    elif response == 5:
        vuln_vulnerabilityScan()
        mainMenu()
    elif response == 6:
        vulners_vulnerabilityScan()
        mainMenu()
    elif response == 7:
        vulscan_vulnerabilityScan()
        mainMenu()
    elif response == 8:
        clear()
        mainMenu()
    elif response == 9:
        clear()
        quit_Program()
    elif response == 10:
        What_webScan()
        mainMenu()
    elif response == 11:
        Dir_Search()
        mainMenu()
    else:
        print("Wrong Choice Number\n")
        mainMenu()

def Dir_Search():
    host = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['dirsearch', '--url', f'OutPuts/dir_search.txt', host])


def What_webScan():
    host = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['whatweb', f'OutPuts/what_web.txt', host])
    
    print(colored('-'*54, 'green'))
    

def Host_DisCov():
    host = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-PE', '-PS443', '-PA80', '-PP', '-oN', f'OutPuts/host_discovery.txt', host])

    print(colored('_'*53, 'green'))

def os_discovery():
    os = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-n', '-F', '-A', '-v', '-Pn', '-sS', '-O', '-oN', f'OutPuts/full_nmap.txt', os])
    print(colored('_'*53, 'green'))

def port_discovery():
    port = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-n', '-v', '-Pn', '-sV', '-oN', f'OutPuts/port_discovery.txt', port])
    print(colored('_'*53, 'green'))

def port_discoveryInaRange():
    ports = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-p', '1-100', '-oN', f'OutPuts/port_discovery_in_range.txt', ports])
    print(colored('_'*53, 'green'))

def vuln_vulnerabilityScan():
    vuln = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-p', '1-100', '--script', 'vuln', '-oN', f'OutPuts/vuln.txt', vuln])
    print(colored('_'*53, 'green'))

def vulners_vulnerabilityScan():
    vulners = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['nmap', '-sV', '--script', 'vulners', '-oN', f'OutPuts/vulners.txt', vulners])
    print(colored('_'*53, 'green'))

def vulscan_vulnerabilityScan():
    uniscan = input(colored("Please enter a target address to scan: ", 'green'))
    print(colored('_'*53, 'green'))
    subprocess.check_call(
        ['uniscan', '--url', f'OutPuts/uniscan.txt', uniscan])
    print(colored('_'*53, 'green'))

def clear(): 
    os.system('cls||clear')

def quit_Program():
    print(colored('Thank you for using our tool, Author Abenezer Mandefro(on the behalf of INSA)', 'green'))
    print(colored('_' * 90, 'green'))
    quit()

if __name__ == '__main__':
    mainMenu()